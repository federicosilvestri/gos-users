openapi: "3.0.1"
info:
  title: Users Service API
  description: Users from GoOutSafe with Microservices
  version: "0.1"

servers:
  - url: /

paths:
  /customer:
    post:
      summary: Add a new customer
      tags:
        - Users
      operationId: gooutsafe.resources.users.create_customer
      requestBody:
        description: Create a new customer inside microservice app
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        201:
          description: Created
        200:
          description: User already exists
        default:
          description: Error during creation of the user

  /operator:
    post:
      summary: Add a new operator
      tags:
        - Users
      operationId: gooutsafe.resources.users.create_operator
      requestBody:
        description: Create a new operator inside microservice app
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operator'
      responses:
        201:
          description: Created
        200:
          description: User already exists
        default:
          description: Error during creation of the user

  /user/{user_id}:
    get:
      tags: [ User ]
      description: Get a customer by its id
      operationId: gooutsafe.resources.users.get_user
      parameters:
        - name: user_id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Return user
        404:
          description: User not found
        default:
          description: An error occured during retrieving the user

  /user_email/{user_email}:
    get:
      tags: [ User ]
      description: Get a customer by its email
      operationId: gooutsafe.resources.users.get_user_by_email
      parameters:
        - name: user_email
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Return user
        404:
          description: User not found
        default:
          description: An error occured during retrieving the user
  
  /user/{id}:
    delete:
      tags: [ User ]
      description: Delete a user by its id
      operationId: gooutsafe.resources.users.delete_user
      parameters:
        - name: id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: User deleted
        404:
          description: User not found
        default:
          description: An error occured during the deletion the user

  /authenticate:
    post:
      summary: Authenticate a user
      tags: [ Users ]
      operationId: gooutsafe.resources.auth.authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: auth
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.org
                password:
                  type: string
                  example: abcd123A
      responses:
        200:
          description: User credentials are correct
          content:
            application/json:
              schema:
                type: object
                properties:
                  authentication:
                    type: enum
                    enum:
                      - 'success'
                      - 'failure'
                    default: 'failure'
                  user:
                    $ref: '#/components/schemas/Customer'

        400:
          description: User credentials are not correct
          content:
            application/json:
              schema:
                type: object
                properties:
                  authentication:
                    type: enum
                    enum:
                      - 'success'
                      - 'failure'
                    default: 'failure'
        default:
          description: An error occured during login
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string

  /social_number/{id}:
    put:
      summary: Add the social number to a customer
      tags:
        - Users
      operationId: gooutsafe.resources.users.add_social_number
      parameters:
        - name: id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Adds the customer's social number
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialNumber'
      responses:
        204:
          description: Created
        default:
          description: Error during creation of the user
  
  /customer/{id}:
    put:
      summary: Updates the fields for the customer depending on its id
      tags:
        - Users
      operationId: gooutsafe.resources.users.update_customer
      parameters:
        - name: id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updates the fields for the customer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomer'
      responses:
        204:
          description: Updated
        default:
          description: Error during the update of the user
    
  /operator/{id}:
    put:
      summary: Updates the fields for the operator depending on its id
      tags:
        - Users
      operationId: gooutsafe.resources.users.update_operator
      parameters:
        - name: id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updates the fields for the operator
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOperator'
      responses:
        204:
          description: Updated
        default:
          description: Error during the update of the user

          
components:
  schemas:
    Customer:
      required:
        - firstname
        - lastname
        - email
        - birthdate
      type: object
      properties:
        firstname:
          type: string
          description: First name of customer
          example: Mario
        lastname:
          type: string
          description: Last name of customer
          example: Rossi
        email:
          type: string
          description: Customer email
          example: mario.rossi@example.org
          format: email
        birthdate:
          type: string
          description: Customer birthdate
          example: '2020-01-01'
          format: date
        phone:
          type: string
          description: Customer phone number
          example: '+39 3332222384'
          minLength: 10
          maxLength: 25
        password:
          type: string
          description: Customer password
          example: 'abcd1234'
          minLength: 5
          maxLength: 127

    Operator:
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: Operator email
          example: mario.rossi@example.org
          format: email
        password:
          type: string
          description: Operator password
          example: 'abcd1234'
          minLength: 5
          maxLength: 127

    SocialNumber:
      required:
        - social_number
      type: object
      properties:
        social_number:
          type: string
          description: Customer social number
          example: OYHSND89H47EDFTQ
          minLength: 16
    
    UpdateCustomer:
      required:
        - email
        - password
        - phone
      type: object
      properties:
        email:
          type: string
          description: Customer email
          example: mario.rossi@example.org
          format: email
        password:
          type: string
          description: Customer password
          example: 'abcd1234'
          minLength: 5
          maxLength: 127
        phone:
          type: string
          description: Customer phone number
          example: '+39 3332222384'
          minLength: 10
          maxLength: 25
    
    UpdateOperator:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          description: Operator email
          example: mario.rossi@example.org
          format: email
        password:
          type: string
          description: Operator password
          example: 'abcd1234'
          minLength: 5
          maxLength: 127